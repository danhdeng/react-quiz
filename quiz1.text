Question:

Write a TodoUst component that expects an items prop which is a list of objects, each with text and done properties. 
TodoUst ai'lso accepts .an on/temC!ickfunction prop, which should be called when a user clkks .an item in the list, if the item .is not marked as done. Otherwise, 
the onftemC!ick should not be called and the dick event itself should not be propagated further. The function should be called w.ith the item obJectfrom the 
items list as the first parameter and the event as the second parameter. 


Solution:

// React is loaded and is available as React and ReactDOM
// imports should NOT be used
const TodoItem = (props) => <li onClick={props.onClick}>{props.item.text}</li>

class TodoList extends React.Component {
  render() {
    console.log(this.props.onItemClick);
    const { items, onListClick} = this.props;
    return (<ul onClick={onListClick}>
      {items.map((item, index) => 
                 <TodoItem item={item} key={index} onClick={this.handleItemClick.bind(this, item)}/>)}
    </ul>);
  }
  
  handleItemClick(item, event) {
    // Write your code here
    if(item.done){
      event.stopPropagation();
    }else{
     this.props.onItemClick(item, event);
    }
  }
}


const items = [ { text: 'Buy grocery', done: true },
  { text: 'Play guitar', done: false },
  { text: 'Romantic dinner', done: false }
];

const App = (props) => <TodoList
  items={props.items}
  onListClick={(event) => console.log("List clicked!")}
  onItemClick={(item, event) => { console.log(item, event) }}
/>;

document.body.innerHTML = "<div id='root'></div>";
const rootElement = document.getElementById("root");
ReactDOM.render(<App items={items}/>, rootElement);
